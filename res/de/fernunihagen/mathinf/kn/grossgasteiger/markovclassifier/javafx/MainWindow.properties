app.title=Markov-Text-Classifier

menu.program=_Program
menu.program.quit=_Quit

menu.training=_Training
menu.training.new=_New
menu.training.open=_Open...
menu.training.save=_Save
menu.training.saveAs=Save _as...

menu.analysis=_Analysis
menu.analysis.open=_Open...
menu.analysis.saveAs=Save _as...
menu.analysis.export=Export all results to clipboard...
menu.analysis.series=Analyze series...

menu.info=?
menu.info.about.title=About...

training.header=Training
training.import.header=Import trainig-data
training.settings.header=Training-settings

training.desc=This pane lets you create and train Hidden-Markov-Models by class.

training.new.confirm.title=Clear all training data?
training.new.confirm.desc=Are you sure to reset all current training? All unsaved state will be lost.
 
training.import.coocs.threshold=Threshold for assuming a cooccurrence as significant.
training.import.maxFiles=Maximum files per folder to import.
training.import.desc=Choose a folder with text-files as training-data. These files must be placed in folders which names are taken as class-names.
training.import.button=Train with files...
training.import.choose.title=Choose directory with trainings-data...
training.import.progress=Importing files...
training.import.progress.cancel=Cancel
training.import.progress.scanning=Scanning directory for classes and text files...
training.import.progress.noFiles=No text-files found
training.import.progress.parsingFile=({0}/{1}) Parsing file "{2}" 
training.import.progress.searchingCoocs=Searching for significant cooccurrences of class
training.import.progress.analyzeWord=({0}/{1}) Analyze word "{2}"
training.import.progress.done=Done! 
training.import.progress.error=Error! 

training.session.select.file=Select session-file...
training.session.unsaved.title=Unsaved training data
training.session.save.error=Error while saving session-file
training.session.open.error=Error while loading session-file

training.classes.head=Classes and Cooccurrences
training.classes.desc=Here you see the current training results. All known classes as tree-items with their significant coccurrences.
training.classes.root.name=Classes

training.classes.col.className=Class
training.classes.col.word1=Word 1
training.classes.col.word2=Word 2
training.classes.col.significance=sig.
training.classes.col.countCoocs=n-coocs
training.classes.col.meanSignificance=\u2300-sig.
training.classes.col.sumSignificance=sum(sig.)
training.classes.col.countWords=n-words
training.classes.col.countSentences=n-sent.

training.words.head=Relevant words
training.words.desc=This view on the trainings-data presents statistics for all relevant words. Shows those with significant cooccurence or at least another word which follows min. 2 times within a class-corpus.
training.words.root.name=Classes

training.words.col.word=Word 1
training.words.col.className=Class
training.words.col.otherWord=Word 2
training.words.col.count=n-times next
training.words.col.significance=cooc.-sig.
training.words.col.classesCount=n-classes
training.words.col.otherWordsCount=n-words
training.words.count=Count of relevant words: 

analysis.header=Analysis
analysis.desc=This pane lets you import a text-file and test it against Hidden-Markov-Models of known classes. 
analysis.input.header=Import analysis-data
analysis.input.desc=Choose a directory which text-files will be analyzed. This is non-recursive. All files with ending txt, html, xml and rtf will be parsed.
analysis.input.button=Analyze files...
analysis.input.choose.title=Select directory with text-files to analyze...

analysis.clear.button=Clear result-table

analysis.settings.header=Analysis-settings
analysis.settings.voidSignificance=Significance-value of unknown cocos.
analysis.settings.pseudoCount=Significance-value of known coocs in states with zero occurences.
analysis.settings.maxFiles=Maximum files per folder to analyze.

analysis.info.noTrainingData.title=No training-data
analysis.info.noTrainingData.head=Import or open training-data first.

analysis.markov.task.title=Generate Markov-Model for further tasks
analysis.markov.task.emissionAlphabet=Build emission-alphabet
analysis.markov.task.stateProbability=Compute state-probabilities
analysis.markov.task.emissionProbabilities=Compute emission-probabilities

analysis.progress.readingFile=Reading file...
analysis.progress.generateMarkovModell=Generating Markov-Model...
analysis.progress.prepareWordOrder=Preparing word-order-analysis...
analysis.progress.creatingTasks=Creating analysis-tasks...
analysis.progress.splitToSentence=Split file to sentences...
analysis.progress.wordOrder=Word-order-analysis...
analysis.progress.normalizing=Normalizing...
analysis.progress.viterbi=Viterbi-algorithm...
analysis.progress.analyzing=Analyzing...
analysis.progress.done=Done

analysis.results.head=Results of latest input
analysis.results.desc=Here you see the progress and results of all text-analyzations. Double-click a finished result for details.

analysis.results.col.filename=Filename
analysis.results.col.class=cooc-class
analysis.results.col.score=in %
analysis.results.col.fileCount=Files
analysis.results.col.time=From
analysis.results.col.emissionCount=n-emissions
analysis.results.col.wordOrderClass=wo-class
analysis.results.col.wordOrderPercentage=wo-percentage
analysis.results.col.wordOrderPercentage.tooltip=Percentage of the top-class-score the the sum of all scores in word-order-analysis
analysis.results.col.minSig=sig_min
analysis.results.col.voidSig=sig_void
analysis.results.col.pseudoSig=sig_pseudo

analysis.details.head=Analyis-result of file
analysis.details.path=Path to file: 
analysis.details.markovClass=Probable class by markov-model:
analysis.details.wordorderClass=Probable class by word-order-model:
analysis.details.viterbiPath=Viterbi-Path
analysis.details.viterbiPath.col.emission=Emission
analysis.details.viterbiPath.col.state=Viterbi-Path
analysis.details.viterbiPath.col.value=Viterbi-value
analysis.details.emissions.count=Emission-count:

analysis.details.wordorder=Word-Order-Scores
analysis.details.wordorder.col.class=Class-name
analysis.details.wordorder.col.score=Score

analysis.session.select.file=Select result-file...
analysis.session.save.error=Error while saving result-file
analysis.session.open.error=Error while loading result-file

tasks.table.head=Current Tasks
tasks.table.desc=Current analysis- and training-tasks running in background. When there are training-tasks running, analysis-tasks are omitted. 
tasks.table.col.name=Task
tasks.table.col.progress=Progress
tasks.table.col.message=Status
tasks.table.col.startDate=Start-date
tasks.table.col.startTime=Start-time
tasks.table.count=Pending tasks: 

tasks.settings.header=Task-settings
tasks.settings.maxThreadCount=Set maximum number of threads for analyzing and training input data.
